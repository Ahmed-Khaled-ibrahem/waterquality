#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

#define DHTPIN 2  // DHT11 data pin
#define DHTTYPE DHT11
#define FAN_RELAY 3    // Relay for fan
#define WATER_PUMP 4   // Relay for water pump
#define NOZZLE_PUMP 5  // Relay for nozzle pump
#define BUTTON_FAN 6   // Manual button for fan
#define BUTTON_PUMP 7  // Manual button for pumps

DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 16, 2);

bool fanState = false;
bool pumpState = false;
bool nozzleState = false;

void setup() {
  pinMode(FAN_RELAY, OUTPUT);
  pinMode(WATER_PUMP, OUTPUT);
  pinMode(NOZZLE_PUMP, OUTPUT);
  pinMode(BUTTON_FAN, INPUT_PULLUP);
  pinMode(BUTTON_PUMP, INPUT_PULLUP);

  lcd.init();
  lcd.backlight();
  dht.begin();
}

void loop() {
  float temp = dht.readTemperature();
  float humidity = dht.readHumidity();

  if (isnan(temp) || isnan(humidity)) {
    lcd.setCursor(0, 0);
    lcd.print("Sensor Error");
    delay(1000);
  }

  // Automatic Control
  if (temp > 30) {
    digitalWrite(FAN_RELAY, HIGH);
    fanState = true;
  } else {
    digitalWrite(FAN_RELAY, LOW);
    fanState = false;
  }

  if (humidity < 40) {
    digitalWrite(NOZZLE_PUMP, HIGH);
    nozzleState = true;
  } else {
    digitalWrite(NOZZLE_PUMP, LOW);
    nozzleState = false;
  }

  // Manual Control via Buttons
  if (digitalRead(BUTTON_FAN) == HIGH) {
    while(digitalRead(BUTTON_FAN) == HIGH){ delay(10);}
    fanState = !fanState;
    digitalWrite(FAN_RELAY, fanState ? HIGH : LOW);
    delay(300);  // Debounce
  }

  if (digitalRead(BUTTON_PUMP) == HIGH) {
    while(digitalRead(BUTTON_PUMP) == HIGH){ delay(10);}
    pumpState = !pumpState;
    digitalWrite(WATER_PUMP, pumpState ? HIGH : LOW);
    delay(300);  // Debounce
  }

  // LCD Display
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("T:");
  lcd.print(temp);
  lcd.print("C H:");
  lcd.print(humidity);
  lcd.print("%");

  lcd.setCursor(0, 1);
  lcd.print("Fan:");
  lcd.print(fanState ? "ON " : "OFF");
  lcd.print(" P1:");
  lcd.print(pumpState ? "ON " : "OFF");
  lcd.print(" P2:");
  lcd.print(nozzleState ? "ON" : "OFF");

  delay(1000);  // Refresh rate
}
